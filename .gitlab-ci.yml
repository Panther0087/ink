# .gitlab-ci.yml
#
# ink
#
# pipelines can be triggered manually in the web


stages:
  - test
  - build

variables:
  GIT_STRATEGY:                    fetch
  CARGO_HOME:                      "/ci-cache/${CI_PROJECT_NAME}/cargo/${CI_JOB_NAME}"
  SCCACHE_DIR:                     "/ci-cache/${CI_PROJECT_NAME}/sccache"
  CARGO_INCREMENTAL:               0
  CI_SERVER_NAME:                  "GitLab CI"
  RUSTFLAGS:                       "-C link-dead-code"
  REGISTRY:                        registry.parity.io/parity/infrastructure/scripts

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - artifacts/

.docker-env:                       &docker-env
  image:                           ${REGISTRY}/ink-ci-linux:latest
  before_script:
    - cargo -vV
    - rustc -vV
    - rustup show
    - bash --version
    - sccache -s
  only:
    - master
    - /^v[0-9]+\.[0-9]+.*$/        # i.e. v1.0, v2.1rc1
    - schedules
    - web
    - /^[0-9]+$/                   # PRs
  tags:
    - linux-docker

#### stage:                        test

check-workspace:
  stage:                           test
  <<:                              *docker-env
  script:
  - ./scripts/check-workspace.sh
  - check_workspace=$?
  - if [ $check_workspace -eq 0 ];
    then
      echo "Workspace checks have passed!";
      exit 0;
    else
      echo "Some workspace checks have not passed!";
      exit 1;
    fi
  - sccache -s


examples-wasm:
  stage:                           test
  <<:                              *docker-env
  script:
    - cargo build --release --no-default-features --target=wasm32-unknown-unknown --verbose --manifest-path examples/lang/$example/Cargo.toml
    - sccache -s

examples-test:
  stage:                           test
  <<:                              *docker-env
  script:
    - cargo test --verbose --manifest-path examples/lang/$example/Cargo.toml
    - sccache -s

examples-abi:
  stage:                           test
  <<:                              *docker-env
  script:
    - cargo run --package abi-gen --manifest-path examples/lang/$example/Cargo.toml
    - sccache -s


# stage:                            build